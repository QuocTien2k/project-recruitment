import { getTeacherExperience } from "@api/public";
import CardTeacher from "@components-cards/CardTeacher";
import Loading from "@components-ui/Loading";
import Title from "@components-ui/Title";
import { setTeacherLoading } from "@redux/loadingSlice";
import React, { useEffect, useState } from "react";
import toast from "react-hot-toast";
import { useDispatch, useSelector } from "react-redux";
import Slider from "react-slick";

const SliderTeacher = () => {
  const [listTeacher, setListTeacher] = useState([]);
  const dispatch = useDispatch();
  const isTeacherLoading = useSelector((state) => state.loading.teacher);

  const fetchTeacher = async () => {
    dispatch(setTeacherLoading(true));
    try {
      const res = await getTeacherExperience();

      if (res?.success) {
        setListTeacher(res?.data);
      } else {
        toast.error("");
      }
    } catch (err) {
      console.error("L·ªói: ", err);
      const msg = err.response?.data?.message || "C√≥ l·ªói khi l·∫•y d·ªØ li·ªáu!";
      toast.error(msg);
    } finally {
      dispatch(setTeacherLoading(false));
    }
  };

  useEffect(() => {
    fetchTeacher();
  }, []);

  // c·∫•u h√¨nh slider
  const settings = {
    arrows: false, // ·∫©n m≈©i t√™n tr√°i ph·∫£i
    dots: false, // ·∫©n ch·∫•m tr√≤n ƒëi·ªÅu h∆∞·ªõng
    infinite: true, // l·∫∑p v√¥ h·∫°n
    speed: 1800, // t·ªëc ƒë·ªô chuy·ªÉn (ms)
    slidesToShow: 2, // s·ªë card hi·ªÉn th·ªã tr√™n m√†n h√¨nh
    slidesToScroll: 1, // s·ªë card tr∆∞·ª£t m·ªói l·∫ßn
    //vertical: true, // chuy·ªÉn sang vertical
    //verticalSwiping: true, // cho ph√©p swipe d·ªçc (mobile)
    autoplay: true, // b·∫≠t auto ch·∫°y
    autoplaySpeed: 5000, // 5s t·ª± ƒë·ªông chuy·ªÉn slide
    pauseOnHover: true, // hover th√¨ d·ª´ng autoplay

    responsive: [
      {
        breakpoint: 1280, // d∆∞·ªõi 1280px => ngang
        settings: {
          vertical: false,
          verticalSwiping: false,
          slidesToShow: 2,
          slidesToScroll: 1,
        },
      },
      {
        breakpoint: 640, // mobile nh·ªè h∆°n 640px => ch·ªâ 1 card
        settings: {
          vertical: false,
          verticalSwiping: false,
          slidesToShow: 1,
          slidesToScroll: 1,
        },
      },
      {
        breakpoint: 10000, // gi·∫£ l·∫≠p "xl v√† l·ªõn h∆°n"
        settings: {
          vertical: true,
          verticalSwiping: true,
          slidesToShow: 2,
          slidesToScroll: 1,
        },
      },
    ],
  };

  return (
    <>
      <section
        className="py-10 px-2 mx-2 rounded-2xl h-full"
        style={{
          background: "var(--bg-section-1)",
          boxShadow: "var(--section-shadow)",
        }}
      >
        <div className="mx-auto px-2 space-y-4">
          {/* üìå Ti√™u ƒë·ªÅ slider */}
          <Title text="Gi√°o vi√™n ti√™u bi·ªÉu" size="2xl" underline />
          {isTeacherLoading ? (
            <Loading size="md" />
          ) : (
            <>
              <Slider {...settings}>
                {listTeacher.map((teacher) => (
                  <div key={teacher._id} className="px-2 mb-4">
                    <CardTeacher key={teacher._id} teacher={teacher} />
                  </div>
                ))}
              </Slider>
            </>
          )}
        </div>
      </section>
    </>
  );
};

export default SliderTeacher;
